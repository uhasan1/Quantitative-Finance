a = pd.DataFrame({'Company': ['ABC CO LTD', 'DEF CO', 'XYZ INC']})
b = pd.DataFrame({'LONG': ['CORPORATION', 'COMPANY'], 'SHORT': ['CO LTD', 'CO']})

for string in b.values.tolist():
    a['Company'] = [re.sub(r'\b%s\b' % string[1], string[0], company) for company in a['Company']]

# print(df.tail()) to inspect the entries
# https://engineering.upside.com/a-beginners-guide-to-optimizing-pandas-code-for-speed-c09ef2c6a4d6
# https://maxpowerwastaken.github.io/blog/pandas-dont-apply-_-vectorize/


# to remove any spaces for the checks: sample_string[7].replace(' ', '')
# replace iterable with .str.replace: df_trics_remit['REMITTER_ENGLISH_NEW'] = [re.sub(r'\b%s\b' % 'AND', '', row) for row in df_trics_remit['REMITTER_ENGLISH_NEW']]

a = pd.DataFrame({'Company': ['ABC PL', 'DEF CO LTD', 'XYZ INC']})
b = pd.DataFrame({'SHORT': ['CO LTD', 'INC'], 'LONG': ['COMPANY LIMITED', 'INCORPORATED']})
pattern = "|".join(b['SHORT'])
a['Company'].str.replace('(' + pattern + ')', 'sigh')
a['Company'].str.replace('(' + pattern + ')', '').str.strip()
a['SHORT'] = a['Company'].str.extract(r'\b%s\b' % '(' + pattern + ')', expand = False)
a['SHORT'].fillna(a['Company'][a['SHORT'].isnull()], inplace = True)
a = pd.merge(a, b, how = 'left', on = 'SHORT')
a['Company'] = a.dropna(subset = ['SHORT'])['Company'].str.replace(r'\b%s\b' % '(' + "|".join(a['SHORT'].dropna()) + ')', '') + a['LONG'].dropna()
a['Company'].fillna(a['SHORT'][a['Company'].isnull()], inplace = True)
del a['SHORT'], a['LONG']

## Alternatives:
#a['Company_new'] = a.dropna(subset = ['SHORT'])['Company'].str.split(r'\b%s\b' % '(' + "|".join(a['SHORT'].dropna()) + ')').str[0] + a['LONG'].dropna()
#a['Company'] = a.dropna().apply(lambda x: x['Company'].replace(x['SHORT'],x['LONG']), axis=1)

