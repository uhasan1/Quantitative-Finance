## https://www.c-sharpcorner.com/blogs/read-csv-file-into-data-table1
## Datatable and Dataset

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Data;
using System.Linq;
using System.Linq.Expressions;

namespace CSVFileParser
{
    public class HanoiFX
    {
        static void Main(string[] args)
        {
            try
            {
                DataTable HanoiFXData = ImportCSV();
                //InspectData(HanoiFXData); // Use when necessary
                string importSuccess = "Runtime: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + " Status: File is imported successfully.";
                SuccessLog(importSuccess);
            }

            catch (Exception e)
            {
                string importError = "Runtime: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + " Status: " + e.Message;
                ErrorLog(importError);
            }
            Console.ReadLine();
        }

        static DataTable ImportCSV()
        {
            // Import the file and display the contents
            DataTable table = new DataTable();
            using (StreamReader file = new StreamReader(@"C:\Users\r15\Downloads\Hanoi_FX.csv")) // Update Directory
            {
                // Separate column headers using pipe delimiter
                string[] headers = file.ReadLine().Split('|');

                foreach (string header in headers)
                {
                    table.Columns.Add(header);
                }

                while (!file.EndOfStream)
                {
                    // Separate column data using pipe delimiter
                    string[] rows = file.ReadLine().Split('|');
                    DataRow row = table.NewRow();

                    for (int i = 0; i < headers.Length; i++)
                    {
                        row[i] = rows[i];
                    }
                    table.Rows.Add(row);
                }
            }
            return table;
        }

        static void InspectData(DataTable Table)
        {
            foreach (DataRow row in Table.Rows)
            {
                foreach (var item in row.ItemArray)
                {
                    Console.WriteLine(item);
                }
            }
        }

        static void SuccessLog(string StatusMsg)
        {
            // Stores all successful status in log file 
            string FilePath = String.Format(@"C:\Users\r15\Downloads\Success_{0}.txt", DateTime.Today.ToString("yyyyMMdd"));
            File.AppendAllText(FilePath, StatusMsg.ToString() + Environment.NewLine);
        }

        static void ErrorLog(string StatusMsg)
        {
            // Stores all error status in log file 
            string FilePath = String.Format(@"C:\Users\r15\Downloads\Error_{0}.txt", DateTime.Today.ToString("yyyyMMdd"));
            File.AppendAllText(FilePath, StatusMsg.ToString() + Environment.NewLine);
        }

    }
}

        public int UploadFlag { get; set; }
        public string Code { get; set; }
        public int SourceData { get; set; }
        public string DealerID { get; set; }
        public string Bank1DealingCode { get; set; }
        public string BrokerDealingCode { get; set; }
        public int DealType { get; set; }
        public string Currency1 { get; set; }
        public double DealVolumeCurrency1 { get; set; }
        public DateTime ValueDatePeriod1Currency1 { get; set; }
        public string LocalTCID { get; set; }
        public string TradingArea { get; set; }
        public string UserDefinedData1 { get; set; }
        public string UserDefinedData5 { get; set; }
        public string Currency2 { get; set; }
        public double ExchangeratePeriod1 { get; set; }
        public int RateDirection { get; set; }

       

namespace MrrsExtensions.Pocos
{
    /// <summary>
    /// Poco for VaR Tab in the Market Risk Report. About 500 rows (trading and banking 250 each)
    /// </summary>
    public class ValueAtRisk
    {
        public string MONITORING_SET_NAME { get; set; }
        public string PORTFOLIO { get; set; }
        public DateTime VALUATION_DATE { get; set; }
        public string CURRENCY { get; set; }
        public double VAR { get; set; }//amount of VaR
        public double ADJUSTMENT_FACTOR { get; set; }
        public double? NO_ACTION_PL { get; set; }// this is from back test
        public bool? IsExcess { get; set; }

        public static string GetImportCommand()
        {
            return System.IO.File.ReadAllText(AppDomain.CurrentDomain.BaseDirectory + @"\bin\Queries\Import\Import_TBL_Var.sql");
        }

    }
}

try
            {
                // Read the file using a StreamReader and display the contents
                using (StreamReader sr = new StreamReader(@"C:\Users\r15\Downloads\Hanoi_FX.csv"))
                {
                    string data;
                    do
                    {
                        data = sr.ReadLine();
                        Console.WriteLine(data);
                    } while (data != null);
                }
            }

            catch (Exception e)
            {
                Console.WriteLine("The file could not be read!");
                Console.WriteLine(e.Message);
            }
            Console.ReadLine();
